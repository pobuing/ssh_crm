<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--action配置-->
    <!--action的对象作用范围一定是多例的 保证每次向spring要对象的时候都是新的-->
    <bean name="userAction" class="cn.probuing.web.action.UserAction" scope="prototype">
        <property name="userService" ref="userService"/>
    </bean>
    <bean class="cn.probuing.web.action.CustomerAction" name="customerAction" scope="prototype">
        <property name="cs" ref="customerService"/>
    </bean>
    <bean class="cn.probuing.web.action.BaseDictAction" name="baseDictAction" scope="prototype">
        <property name="baseDictService" ref="baseDictService"/>
    </bean>
    <bean name="linkManAction" class="cn.probuing.web.action.LinkManAction" scope="prototype">
        <property name="lms" ref="linkManService"/>
    </bean>
    <bean class="cn.probuing.web.action.SaleVisitAction" name="saleVisitAction" scope="prototype">
        <property name="svs" ref="saleVisitService"/>
    </bean>
    <!--service配置-->
    <bean name="userService" class="cn.probuing.service.impl.UserServiceImpl">
        <property name="ud" ref="userDao"/>
    </bean>
    <bean name="customerService" class="cn.probuing.service.impl.CustomerServiceImpl">
        <property name="cd" ref="customerDao"/>
    </bean>
    <bean name="baseDictService" class="cn.probuing.service.impl.BaseDictServiceImpl">
        <property name="bdd" ref="baseDictDao"/>
    </bean>
    <bean name="linkManService" class="cn.probuing.service.impl.LinkManServiceImpl">
        <property name="lmd" ref="linkManDao"/>
    </bean>
    <bean class="cn.probuing.service.impl.SaleVisitServiceImpl" name="saleVisitService">
        <property name="svd" ref="saleVisitDao"/>
    </bean>
    <!--配置dao-->
    <bean name="userDao" class="cn.probuing.dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean name="customerDao" class="cn.probuing.dao.impl.CustomerDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean class="cn.probuing.dao.impl.BaseDictDaoImpl" name="baseDictDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean name="linkManDao" class="cn.probuing.dao.impl.LinkManDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean class="cn.probuing.dao.impl.SaleVisitDaoImpl" name="saleVisitDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--hibernate配置 配置sessionFactory-->
    <!--<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">-->
    <!--&lt;!&ndash;方案1：仍然使用外部的hibernate.cfg.xml配置信息&ndash;&gt;-->
    <!--<property name="configLocation" value="classpath:hibernate.cfg.xml.back"/>-->
    <!--</bean>-->

    <!--方案2：在spring配置中放置hibernate配置信息-->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--将连接池注入到sessionFactory-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置hibernate基本信息-->
        <property name="hibernateProperties">
            <props>
                <!--   <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                   <prop key="hibernate.connection.url">jdbc:mysql://103.249.130.173:3306/hibernate_crm?useUnicode=true&amp;characterEncoding=UTF8</prop>
                   <prop key="hibernate.connection.username">appUser</prop>
                   <prop key="hibernate.connection.password">AA1122BB</prop>-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>

            </props>
        </property>
        <!--引入orm元数据 mappingDirectoryLocation 指定orm元数据所在的包路径，spring会自动读取包中的所有配置-->
        <property name="mappingDirectoryLocations" value="classpath:cn/probuing/domain"></property>
    </bean>
    <!--读取db.properties文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--配置c3p0连接池-->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--配置核心事务管理器-->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--配置通知-->
    <tx:advice id="tvAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
            <tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
            <tx:method name="*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>

        </tx:attributes>
    </tx:advice>
    <!--配置将通知织入目标对象-->
    <aop:config>
        <!--配置切点-->
        <aop:pointcut id="txPc" expression="execution(* cn.probuing.service.impl.*ServiceImpl.*(..))"/>
        <!--配置切面-->
        <aop:advisor advice-ref="tvAdvice" pointcut-ref="txPc"/>
    </aop:config>

    <!--开启注解配置事务-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
</beans>